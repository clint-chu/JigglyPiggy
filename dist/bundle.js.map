{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/explode.js","webpack:///./src/index.js","webpack:///./src/jiggle.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;;AAEO;AACP;AACA;;AAEO;AACP;AACA,E;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAyD;AACf;;AAE1C;AACA;AACA;AACA;;;;AAIA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,uDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA,IAAI,8DAAa;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,IAAI,8DAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,uCAAuC,+CAAkB;AACzD;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA,IAAI,8DAAa;AACjB;AACA;AACA;AACA;;AAEA,O;;;;;;;;;;;;ACpVA;AAAA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEe,iFAAkB,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const explosion = document.getElementById(\"explosion\");\n\nexport const showExplosion = () => {\n    explosion.classList.add(\"isExploded\");\n};\n\nexport const hideExplosion = () => {\n    explosion.classList.remove(\"isExploded\");\n};","import { showExplosion, hideExplosion } from \"./explode\";\nimport jigglePiggyBankers from \"./jiggle\";\n\nlet score = 0;\nlet isPaused = false;\nconst board = document.getElementById(\"board\")\nconst userScore = document.getElementById(\"user-score\");\n\n\n\n// Coin Logic\nconst coinDim = { width: 40, height: 40 };\nconst baseCoin = document.getElementById(\"coin\");\n\nconst makeCoin = () => {\n    const x = Math.random() * (800 - coinDim.width);\n    const y = Math.random() * (600 - coinDim.height);\n    const newCoin = baseCoin.cloneNode(true);\n    newCoin.removeAttribute(\"id\");\n    newCoin.classList.add(\"coin-clone\");\n    newCoin.style.left = x + \"px\";\n    newCoin.style.top = y + \"px\";\n    bindCoinEvents(newCoin);\n    board.appendChild(newCoin);\n};\n\nconst makeCoins = (n) => {\n    for (let i = 0; i < n; i++) {\n        makeCoin();\n    };\n};\n\nconst deleteCoin = (coin) => {\n    coin.remove();\n};\n\nconst deleteCoins = () => {\n    const coins = document.getElementsByClassName(\"coin-clone\");\n    while (coins.length) {\n        deleteCoin(coins[0]);\n    };\n};\n\nconst bindCoinEvents = (coin) => {\n    const onMouseDown = function(evt) {\n\n        if (isPaused) {\n            return false\n        }\n        \n        let shiftX = evt.clientX - coin.getBoundingClientRect().left + board.getBoundingClientRect().left;\n        let shiftY = evt.clientY - coin.getBoundingClientRect().top + board.getBoundingClientRect().top;\n\n        coin.style.position = \"absolute\";\n        coin.style.zIndex = 1000;\n\n        moveAt(evt.pageX, evt.pageY);\n\n        function moveAt(pageX, pageY) {\n            let x = pageX - shiftX\n            let y = pageY - shiftY\n\n            x = x < 0 ? 0\n                : x > 800 - coinDim.width ? 800 - coinDim.width\n                : x;\n\n            y = y < 0 ? 0\n                : y > 600 - coinDim.height ? 600 - coinDim.height\n                : y;\n\n            coin.style.left = x + \"px\";\n            coin.style.top = y + \"px\";\n        };\n\n        let currentDroppable = null;\n        let isOverPig = false;\n\n        function onMouseMove(evt) {\n            moveAt(evt.pageX, evt.pageY);\n            coin.hidden = true;\n            let elemBelow = document.elementFromPoint(evt.clientX, evt.clientY);\n            coin.hidden = false;\n\n            if (!elemBelow) return;\n\n            let droppableBelow = elemBelow.closest(\".droppable\");\n            let bombCollision = elemBelow.closest(\".bomb\");\n\n            if (currentDroppable != droppableBelow) {\n                if (currentDroppable) {\n                    isOverPig = false;\n                };\n\n                currentDroppable = droppableBelow;\n                if (currentDroppable) {\n                    isOverPig = true;\n                };\n            };\n\n            let isOverBoard = !elemBelow.closest(\"#board\");\n\n            if (isOverBoard) {\n                onMouseUp();\n            };\n            \n            if (bombCollision) {\n                endGame();\n                document.removeEventListener(\"mousemove\", onMouseMove);\n            };\n        };\n\n        const onMouseUp = function() {\n            document.removeEventListener(\"mousemove\", onMouseMove);\n            \n            if (isOverPig) {\n                jigglePiggyBankers();\n                coin.removeEventListener(\"mouseup\", onMouseUp);\n                coin.removeEventListener(\"mousedown\", onMouseDown);\n                coin.removeEventListener(\"dragstart\", onDragStart);\n                coin.remove();\n                makeCoin();\n                score += 100;\n                userScore.innerHTML = score;\n            };\n        };\n\n        document.addEventListener(\"mousemove\", onMouseMove);\n        coin.addEventListener(\"mouseup\", onMouseUp);\n    };\n    \n    // Don't do anything on start of drag. Stop the browser from doing anything else.\n    const onDragStart = () => false;\n    \n    coin.addEventListener(\"dragstart\", onDragStart);\n    coin.addEventListener(\"mousedown\", onMouseDown);\n};\n\n\n\n// Bomb Logic\nconst bomb = document.getElementById(\"bomb\");\nconst bombDim = { width: 80, height: 80 };\n\nconst makeBomb = () => {\n    const x = Math.random() * (800 - bombDim.width);\n    const y = Math.random() * (600 - bombDim.height);\n    const newBomb = bomb.cloneNode(true);\n    newBomb.removeAttribute(\"id\");\n    newBomb.classList.add(\"bomb-clone\");\n    newBomb.style.left = x + \"px\";\n    newBomb.style.top = y + \"px\";\n    bindBombEvents(newBomb);\n    board.appendChild(newBomb);\n};\n\nconst makeBombs = (n) => {\n    for (let i = 0; i < n; i++) {\n        makeBomb();\n    };\n};\n\nconst deleteBomb = (bomb) => {\n    bomb.removeEventListener(\"mousedown\", endGame);\n    bomb.remove();\n};\n\nconst deleteBombs = () => {\n    const bombs = document.getElementsByClassName(\"bomb-clone\");\n    while (bombs.length) {\n        deleteBomb(bombs[0]);\n    };\n};\n\nconst spawnBombs = (n) => {\n    deleteBombs();\n    makeBombs(n);\n};\n\nconst bindBombEvents = (bomb) => {\n    bomb.addEventListener(\"mousedown\", endGame);\n};\n\n\n\n// Pause Logic\nlet bombInterval;\nlet counterInterval;\nlet counter = 5;\nconst menu = document.getElementById(\"menu\")\nconst pauseMessage = document.getElementById(\"oause-message\")\nconst playButton = document.getElementById(\"play\")\nconst pauseButton = document.getElementById(\"pause\");\n\nconst startIntervals = () => {\n    bombInterval = setInterval(() => {\n        spawnBombs(counter);\n    }, 2000);\n    counterInterval = setInterval(() => {\n        counter++;\n    }, 10000);\n};\n\nconst clearIntervals = () => {\n    clearInterval(bombInterval);\n    clearInterval(counterInterval);\n};\n\nconst handlePause = () => {\n    if (isPaused) {\n        // resumeGame\n        startIntervals();\n        menu.classList.remove(\"isPaused\");\n    } else {\n        // pauseGame\n        clearIntervals();\n        menu.classList.add(\"isPaused\");\n    };\n    isPaused = !isPaused;\n};\n\n\n\n// Music Logic\nlet isPlaying = false;\nconst musicPlaying = document.getElementById(\"music-playing\");\nconst musicMuted = document.getElementById(\"music-muted\");\n\nconst handleMusic = () => {\n    const music = document.getElementById(\"music\");\n    \n    if (isPlaying === false) {\n        music.play();\n        menu.classList.add(\"isPlaying\");\n    } else {\n        music.pause();\n        menu.classList.remove(\"isPlaying\");\n    };\n    isPlaying = !isPlaying;\n};\n\n\n\n// Instructions Logic\nlet isDisplayed = false;\nconst instructionsButton = document.getElementById(\"instructions-button\");\nconst instructions = document.getElementById(\"instructions-window\");\n\nconst handleInstructions = () => {\n    if (isDisplayed === false) {\n        instructions.classList.add(\"isDisplayed\");\n    } else {\n        instructions.classList.remove(\"isDisplayed\");\n    }\n    isDisplayed = !isDisplayed;\n};\n\n\n\n// Game Over Logic\nconst endGame = () => {\n    if (isPaused) {\n        return false\n    }\n\n    showExplosion();\n    deleteBombs();\n    deleteCoins();\n    clearIntervals();\n\n    playButton.removeEventListener(\"click\", handlePause);\n    pauseButton.removeEventListener(\"click\", handlePause);\n    instructions.classList.remove(\"isDisplayed\");\n};\n\n\n\n// Restart Game Logic\nconst restartGame = () => {\n    deleteBombs();\n    deleteCoins();\n    endGame();\n    hideExplosion();\n    makeCoins(3);\n    makeBombs(5);\n    clearIntervals();\n    startIntervals();\n    // handleInstructions();\n    score = 0\n    userScore.innerHTML = 0;\n\n    if (isPaused) {\n        // resumeGame\n        menu.classList.remove(\"isPaused\");\n        isPaused = false;\n    }\n\n    playButton.addEventListener(\"click\", handlePause);\n    pauseButton.addEventListener(\"click\", handlePause);\n    startWindow.classList.remove(\"isDisplayed\");\n};\n\n\n\n// Handle Keydown Event Logic\nconst handleKeydown = (event) => {\n    // if (event.key === \" \") {\n    //     event.preventDefault();\n    //     handlePause();\n    // };\n\n    if (event.key === \"e\") {\n        event.preventDefault();\n        restartGame();\n    };\n};\n\n\n\n// Bind Events Logic\nconst bindEvents = () => {\n    document.addEventListener(\"click\", jigglePiggyBankers);\n    document.addEventListener(\"keydown\", handleKeydown);\n    musicPlaying.addEventListener(\"click\", handleMusic);\n    musicMuted.addEventListener(\"click\", handleMusic);\n    instructionsButton.addEventListener(\"click\", handleInstructions);\n};\n\n\n\n// Initialize Game Logic\nconst startWindow = document.getElementById(\"start-window\");\n\nconst init = () => {\n    bindEvents();\n    hideExplosion();\n    handlePause();\n    // handleInstructions();\n    startWindow.classList.add(\"isDisplayed\");\n};\n\ninit();","const piggyBankers = document.getElementById(\"pig\");\n\nconst jigglePiggyBankers = () => {\n    piggyBankers.classList.add(\"jiggle\");\n    setTimeout(() => {\n        piggyBankers.classList.remove(\"jiggle\");\n    }, 900);\n};\n\nexport default jigglePiggyBankers;"],"sourceRoot":""}